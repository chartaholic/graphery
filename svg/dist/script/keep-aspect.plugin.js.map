{
  "version": 3,
  "sources": ["../../src/svg/src/resize-observer.plugin.js", "../../src/svg/src/keep-aspect.plugin.js", "../../src/svg/build/keep-aspect.plugin.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback resizeObserver~callback\r\n * @param {SVGElement|gySVGObject} svg\r\n * @param {SVGMatrix} currentMatrix\r\n * @param {SVGMatrix} prevMatrix\r\n */\r\n\r\nconst resizeObserverCache = new WeakMap ();\r\n\r\n/**\r\n * keepAspect\r\n * @usage gySVG.extension( keepAspect )\r\n * @type {{keepAspect() : gySVGObject}}\r\n */\r\nexport default function install (gySVG, gySVGObject) {\r\n  // Update gySVGObject\r\n  Object.assign (\r\n    gySVGObject.prototype, {\r\n      resizeObserver (callback) {\r\n        const self = this;\r\n        const svg  = this.el.tagName.toLowerCase () === 'svg' ? this.el : this.parent ('svg').el;\r\n        if (resizeObserverCache.has (svg)) {\r\n          return resizeObserverCache.get (svg).push (callback);\r\n        }\r\n        resizeObserverCache.set (svg, [callback]);\r\n        let prevMatrix = {};\r\n        const check    = () => {\r\n          const currentMatrix = svg.getScreenCTM ();\r\n          if (\r\n            currentMatrix.a !== prevMatrix.a ||\r\n            currentMatrix.b !== prevMatrix.b ||\r\n            currentMatrix.c !== prevMatrix.c ||\r\n            currentMatrix.d !== prevMatrix.d ||\r\n            currentMatrix.e !== prevMatrix.e ||\r\n            currentMatrix.f !== prevMatrix.f\r\n          ) {\r\n            const callbacks = resizeObserverCache.get (svg);\r\n            for (let cb of callbacks) {\r\n              cb (self, currentMatrix, prevMatrix);\r\n            }\r\n            prevMatrix = currentMatrix;\r\n          }\r\n          window.requestAnimationFrame (check);\r\n        };\r\n        check ();\r\n        return self;\r\n      }\r\n    });\r\n}\r\n", "import installResizeObserver from './resize-observer.plugin.js';\r\n\r\nexport default function install (gySVG, gySVGObject) {\r\n  \r\n  // Install dependencies\r\n  installResizeObserver(gySVG, gySVGObject);\r\n  \r\n  // Update gySVGObject\r\n  Object.assign (\r\n    gySVGObject.prototype, {\r\n      /**\r\n       * keepAspect\r\n       * @returns {gySVGObject}\r\n       */\r\n      keepAspect () {\r\n        const svg = this.closest ('svg');\r\n        switch (this.el.tagName.toLowerCase ()) {\r\n          case 'text':\r\n            keepTextAspect (svg, this);\r\n            break;\r\n          case 'line':\r\n            keepLineAspect (svg, this);\r\n            break;\r\n        }\r\n        return this;\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} text\r\n */\r\nfunction keepTextAspect (svg, text) {\r\n  const originalCTM = svg.getScreenCTM ();\r\n  text.el._keepX    = text.x ();\r\n  text.el._keepY    = text.y ();\r\n  svg.resizeObserver ((svg2, currentCTM) => {\r\n    text.transform (`scale( ${ originalCTM.a / currentCTM.a }, ${ originalCTM.d / currentCTM.d })`);\r\n    text.x (text.el._keepX / (originalCTM.a / currentCTM.a));\r\n    text.y (text.el._keepY / (originalCTM.d / currentCTM.d));\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} line\r\n */\r\nfunction keepLineAspect (svg, line) {\r\n  const originalCTM = svg.getScreenCTM ();\r\n  line.el._keepX1   = line.x1 ();\r\n  line.el._keepX2   = line.x2 ();\r\n  line.el._keepY1   = line.y1 ();\r\n  line.el._keepY2   = line.y2 ();\r\n  svg.resizeObserver ((svg2, currentCTM) => {\r\n    line.transform (`scale( ${ originalCTM.a / currentCTM.a }, ${ originalCTM.d / currentCTM.d })`);\r\n    line.x1 (line.el._keepX1 / (originalCTM.a / currentCTM.a));\r\n    line.x2 (line.el._keepX2 / (originalCTM.a / currentCTM.a));\r\n    line.y1 (line.el._keepY1 / (originalCTM.d / currentCTM.d));\r\n    line.y2 (line.el._keepY2 / (originalCTM.d / currentCTM.d));\r\n  });\r\n}\r\n\r\n//\r\n// export function keepStrokeWidth (svg, el) {\r\n//   const originalCTM = svg.getScreenCTM ();\r\n//   const dimension   = originalCTM.a > originalCTM.d ? 'a' : 'd';\r\n//   el.el._keepWidth  = (el.stroke_width () || parseFloat (getComputedStyle (el.el).strokeWidth)) * Math.max (\r\n//     originalCTM.a,\r\n//     originalCTM.d\r\n//   );\r\n//   svg.resizeObserver ((svg, currentCTM) => {\r\n//     el.stroke_width (el.el._keepWidth / currentCTM[ dimension ]);\r\n//     // console.log(el.stroke_width())\r\n//   });\r\n// }\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} circle\r\n */\r\nfunction keepCircleAspect (svg, circle) {\r\n  const originalCTM = svg.getScreenCTM ();\r\n  circle.el._keepCX = circle.cx ();\r\n  circle.el._keepCY = circle.cy ();\r\n  circle.el._keepR  = circle.r ();\r\n  svg.resizeObserver ((svg2, currentCTM) => {\r\n    circle.transform (`scale( ${ originalCTM.a / currentCTM.a }, ${ originalCTM.d / currentCTM.d })`);\r\n    circle.cx (circle.el._keepCX / (originalCTM.a / currentCTM.a));\r\n    circle.cy (circle.el._keepCY / (originalCTM.d / currentCTM.d));\r\n    circle.r (circle.el._keepR / Math.max (\r\n      originalCTM.a / currentCTM.a,\r\n      originalCTM.d / currentCTM.d\r\n    ));\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} rect\r\n */\r\nfunction keepRectAspect (svg, rect) {\r\n  const originalCTM       = svg.getScreenCTM ();\r\n  rect.el._keepX          = rect.x ();\r\n  rect.el._keepY          = rect.y ();\r\n  rect.el._keepWidth      = rect.width ();\r\n  rect.el._keepHeight     = rect.height ();\r\n  rect.el._keepProportion = rect.el._keepWidth / rect.el._keepHeight;\r\n  svg.resizeObserver ((svg2, currentCTM) => {\r\n    rect.transform (`scale( ${ originalCTM.a / currentCTM.a }, ${ originalCTM.d / currentCTM.d })`);\r\n    rect.x (rect.el._keepX / (originalCTM.a / currentCTM.a));\r\n    rect.y (rect.el._keepY / (originalCTM.d / currentCTM.d));\r\n    const width  = (rect.el._keepWidth / (originalCTM.a / currentCTM.a));\r\n    const height = (rect.el._keepHeight / (originalCTM.d / currentCTM.d));\r\n    if (rect.el._keepProportion >= width / height) {\r\n      rect.width (width);\r\n      rect.height (width / rect.el._keepProportion);\r\n    } else {\r\n      rect.width (height * rect.el._keepProportion);\r\n      rect.height (height);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} ellipse\r\n */\r\nfunction keepEllipseAspect (svg, ellipse) {\r\n  const originalCTM          = svg.getScreenCTM ();\r\n  ellipse.el._keepCX         = ellipse.cx ();\r\n  ellipse.el._keepCY         = ellipse.cy ();\r\n  ellipse.el._keepRX         = ellipse.rx ();\r\n  ellipse.el._keepRY         = ellipse.ry ();\r\n  ellipse.el._keepProportion = ellipse.el._keepRX / ellipse.el._keepRY;\r\n  svg.resizeObserver ((svg2, currentCTM) => {\r\n    ellipse.transform (`scale( ${ originalCTM.a / currentCTM.a }, ${ originalCTM.d / currentCTM.d })`);\r\n    ellipse.cx (ellipse.el._keepCX / (originalCTM.a / currentCTM.a));\r\n    ellipse.cy (ellipse.el._keepCY / (originalCTM.d / currentCTM.d));\r\n    const rx = (ellipse.el._keepRX / (originalCTM.a / currentCTM.a));\r\n    const ry = (ellipse.el._keepRY / (originalCTM.d / currentCTM.d));\r\n    if (ellipse.el._keepProportion >= rx / ry) {\r\n      ellipse.rx (rx);\r\n      ellipse.ry (rx / ellipse.el._keepProportion);\r\n    } else {\r\n      ellipse.rx (ry * ellipse.el._keepProportion);\r\n      ellipse.ry (ry);\r\n    }\r\n  });\r\n}\r\n", "import plugin from '../src/keep-aspect.plugin.js';\r\n\r\n(typeof gobalThis !== 'undefined' ? globalThis : window).gySVG.extend (plugin);\r\n"],
  "mappings": "MAQA,KAAM,GAAsB,GAAI,SAOjB,WAAkB,EAAO,GAEtC,OAAO,OACL,EAAY,UAAW,CACrB,eAAgB,GACd,KAAM,GAAO,KACP,EAAO,KAAK,GAAG,QAAQ,gBAAmB,MAAQ,KAAK,GAAK,KAAK,OAAQ,OAAO,GACtF,GAAI,EAAoB,IAAK,GAC3B,MAAO,GAAoB,IAAK,GAAK,KAAM,GAE7C,EAAoB,IAAK,EAAK,CAAC,IAC/B,GAAI,GAAa,GACjB,KAAM,GAAW,KACf,KAAM,GAAgB,EAAI,eAC1B,GACE,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAE/B,KAAM,GAAY,EAAoB,IAAK,GAC3C,OAAS,KAAM,GACb,EAAI,EAAM,EAAe,GAE3B,EAAa,EAEf,OAAO,sBAAuB,IAEhC,WACO,KC5CA,WAAkB,EAAO,GAGtC,EAAsB,EAAO,GAG7B,OAAO,OACL,EAAY,UAAW,CAKrB,aACE,KAAM,GAAM,KAAK,QAAS,OAC1B,OAAQ,KAAK,GAAG,QAAQ,mBACjB,OACH,EAAgB,EAAK,MACrB,UACG,OACH,EAAgB,EAAK,MACrB,MAEJ,MAAO,SAUf,WAAyB,EAAK,GAC5B,KAAM,GAAc,EAAI,eACxB,EAAK,GAAG,OAAY,EAAK,IACzB,EAAK,GAAG,OAAY,EAAK,IACzB,EAAI,eAAgB,CAAC,EAAM,KACzB,EAAK,UAAW,UAAW,EAAY,EAAI,EAAW,MAAQ,EAAY,EAAI,EAAW,MACzF,EAAK,EAAG,EAAK,GAAG,OAAU,GAAY,EAAI,EAAW,IACrD,EAAK,EAAG,EAAK,GAAG,OAAU,GAAY,EAAI,EAAW,MASzD,WAAyB,EAAK,GAC5B,KAAM,GAAc,EAAI,eACxB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAI,eAAgB,CAAC,EAAM,KACzB,EAAK,UAAW,UAAW,EAAY,EAAI,EAAW,MAAQ,EAAY,EAAI,EAAW,MACzF,EAAK,GAAI,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACvD,EAAK,GAAI,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACvD,EAAK,GAAI,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACvD,EAAK,GAAI,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,MC3D3D,AAAC,OAAO,YAAc,YAAc,WAAa,QAAQ,MAAM,OAAQ",
  "names": []
}
